from aiogram import types,Dispatcher
from bdbaza import sqlite as k
from user.users_kboard import *
from cgf.config import bot, UserState,FSMContext,dp,UserSpisok
from cgf.otherKB import menu,start_ikb #–≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é —Ü–µ–Ω—Ç—Ä–∞–ª—å–Ω–æ–µ
from user.zapis_handlers import btn_zapis,on_start




async def see_spisok(callback:types.CallbackQuery):
    kek=callback.message.chat.id
    result = await k.get_zapis(kek) #–ø–æ–ª—É—á–∞—é –∑–∞–ø–∏—Å–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    print(result)
    if result==[]:
        await callback.answer("ü§∑‚Äç‚ôÄÔ∏èü§∑‚Äç‚ôÄÔ∏èü§∑‚Äç‚ôÄ –í—ã –µ—â–µ –Ω–µ –∑–∞–ø–∏—Å–∞–Ω—ã ü§∑‚Äç‚ôÄÔ∏èü§∑‚Äç‚ôÄÔ∏èü§∑‚Äç‚ôÄÔ∏è", show_alert=True)
    else:
        await callback.message.delete()
        Text= f'–ù–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω–∞:<b> {result[0][6]} </b> \n' \
              f'–í–∞—à–∏ –∑–∞–ø–∏—Å–∏:'
        await callback.message.answer(Text,parse_mode=types.ParseMode.HTML,reply_markup=myzapis_ikb(result))
        await UserSpisok.vibor.set()

async def take_callback_spisok_handler(callback:types.CallbackQuery,callback_data: dict,state: FSMContext):
    markup = InlineKeyboardMarkup().add(types.InlineKeyboardButton('–ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é', callback_data='nazad'))
    await callback.message.delete()
    if callback_data['action']=='nazad':
        print('–Ω–∞–∂–∞—Ç–æ –Ω–∞–∑–∞–¥')
        await state.finish()
        await on_start(callback.message)
    elif callback_data['action']=='editphone':
        print('—Å–º–µ–Ω–∞ –Ω–æ–º–µ—Ä–∞ —Ç–µ–ª–µ—Ñ–æ–Ω–∞')
        await callback.message.answer('–£–∫–∞–∂–∏—Ç–µ –Ω–æ–≤—ã–π –Ω–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω–∞:',reply_markup=markup)
        await UserSpisok.phone.set()
    else:
        #await callback.message.delete()
        print(callback_data['action'])
        await state.update_data(date_id=callback_data['action']) #—Å–æ—Ö—Ä–∞–Ω—è—é –∏–¥ –∑–∞–ø–∏—Å–∏ –Ω–∞ —É—Å–ª—É–≥—É —é–∑–µ—Ä–æ–º(–¥–∞—Ç–∞ –∏–¥) –¥–ª—è –¥–∞–ª—å–Ω–µ–π—à–µ–≥–æ —É–¥–∞–ª–µ–Ω–∏—è
        result=await k.get_one_zapis(callback_data['action'])
        print(result)
        print(result[2])
        Text=f'–í—ã –≤—ã–±—Ä–∞–ª–∏ –∑–∞–ø–∏—Å—å:\n' \
             f'{result[3]}: {result[1]} –í—Ä–µ–º—è: {result[2]}\n' \
             f'<b>–ü—Ä–∏ –Ω–∞–∂–∞—Ç–∏–∏ –Ω–∞ –∫–Ω–æ–ø–∫—É –≤–∞—à–∞ –∑–∞–ø–∏—Å—å –±—É–¥–µ—Ç —É–¥–∞–ª–µ–Ω–∞</b>'

        await callback.message.answer(Text,parse_mode=types.ParseMode.HTML,reply_markup=myzapis_ikb_edit())
        await UserSpisok.next()

async def perezapis_spisok_handler(callback:types.CallbackQuery,callback_data: dict,state: FSMContext):
    if callback_data['action']=='edit_time':
        result=await state.get_data() #–ø–æ–ª—É—á–∞—é –∏–∑ —Å–æ—Å—Ç–æ—è–Ω–∏–π –∏–¥ –∑–∞–ø–∏—Å–∏ –Ω–∞ —É—Å–ª—É–≥—É —é–∑–µ—Ä–æ–º
        await k.delet_zapis(result['date_id']) #–≤—ã–∑—ã–≤–∞—é –∑–∞–ø—Ä–æ—Å –Ω–∞ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ –¥–∞–Ω–Ω—ã—Ö (–æ—á–∏—Å—Ç–∫–µ –ø–æ–ª—è –æ—Ç —é–∑–µ—Ä–∞)
        print('–í—ã–ø–æ–ª–Ω–µ–Ω–æ —É–¥–∞–ª–µ–Ω–∏–µ —é–∑–µ—Ä–∞ –∏–∑ –∑–∞–ø–∏—Å–∏')
        await callback.answer("–í—Ä–µ–º—è —É–¥–∞–ª–µ–Ω–æ,–≤—ã –º–æ–∂–µ—Ç–µ –ø–µ—Ä–µ–∑–∞–ø–∏—Å–∞—Ç—å—Å—è:", show_alert=True)
        await state.finish()
        await btn_zapis(callback)
    elif callback_data['action']=='delete_time':
        result=await state.get_data() #–ø–æ–ª—É—á–∞—é –∏–∑ —Å–æ—Å—Ç–æ—è–Ω–∏–π –∏–¥ –∑–∞–ø–∏—Å–∏ –Ω–∞ —É—Å–ª—É–≥—É —é–∑–µ—Ä–æ–º
        await k.delet_zapis(result['date_id']) #–≤—ã–∑—ã–≤–∞—é –∑–∞–ø—Ä–æ—Å –Ω–∞ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ –¥–∞–Ω–Ω—ã—Ö (–æ—á–∏—Å—Ç–∫–µ –ø–æ–ª—è –æ—Ç —é–∑–µ—Ä–∞)
        print('–í—ã–ø–æ–ª–Ω–µ–Ω–æ —É–¥–∞–ª–µ–Ω–∏–µ —é–∑–µ—Ä–∞ –∏–∑ –∑–∞–ø–∏—Å–∏')
        await callback.answer("ü§∑‚Äç‚ôÇÔ∏è–í—Ä–µ–º—è —É–¥–∞–ª–µ–Ω–æü§∑‚Äç‚ôÇÔ∏è", show_alert=True)
        await state.finish()
        await on_start(callback.message)
    else:
        await state.finish()
        await see_spisok(callback)

async def edit_phone_number(message:types.Message,state: FSMContext):
    await bot.delete_message(message.chat.id,message.message_id-1) #—É–¥–∞–ª—è–µ—Ç "–≤–≤–µ–¥–∏—Ç–µ –Ω–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω–∞"
    await k.update_phone(message.text,message.chat.id) #–≤—ã–ø–æ–ª–Ω—è–µ—Ç—Å—è –∑–∞–ø—Ä–æ—Å
    print('–í—ã–ø–æ–ª–Ω–µ–Ω–æ')
    await state.finish()
    await on_start(message)


def register_spisok_handlers(dp:Dispatcher) -> None:
    dp.register_callback_query_handler(see_spisok,text='push4') #–≤—ã–±–æ—Ä –∏–∑ —É—Å–ª—É–≥
    dp.register_callback_query_handler(take_callback_spisok_handler,myzapis.filter(),state=UserSpisok.vibor)
    dp.register_callback_query_handler(perezapis_spisok_handler,myzapis_edit.filter(),state=UserSpisok.edit)
    dp.register_message_handler(edit_phone_number,state=UserSpisok.phone)